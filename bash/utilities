# Extract function for common file formats (https://github.com/xvoland/Extract/blob/master/extract.sh)
function extract {
    if [ -z "$1" ]; then
        # display usage if no parameters given
        echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    else
        if [ -f "$1" ] ; then
            NAME=${1%.*}
            #mkdir $NAME && cd $NAME
            case "$1" in
                *.tar.bz2)   tar xvjf ./"$1"    ;;
                *.tar.gz)    tar xvzf ./"$1"    ;;
                *.tar.xz)    tar xvJf ./"$1"    ;;
                *.lzma)      unlzma ./"$1"      ;;
                *.bz2)       bunzip2 ./"$1"     ;;
                *.rar)       unrar x -ad ./"$1" ;;
                *.gz)        gunzip ./"$1"      ;;
                *.tar)       tar xvf ./"$1"     ;;
                *.tbz2)      tar xvjf ./"$1"    ;;
                *.tgz)       tar xvzf ./"$1"    ;;
                *.zip)       unzip ./"$1"       ;;
                *.Z)         uncompress ./"$1"  ;;
                *.7z)        7z x ./"$1"        ;;
                *.xz)        unxz ./"$1"        ;;
                *.exe)       cabextract ./"$1"  ;;
                *)           echo "extract: '$1' - unknown archive method" ;;
            esac
        else
            echo "'$1' - file does not exist"
        fi
    fi
}

# bootstrap a project with some docker containers
function project {
    ERRORS=0
    if [ -z "$1" ] || [ -z "$2" ]; then
        echo "Usage: project <path/to/project/dir> <project_template>"
    else
        if [ -d "$1" ]; then
            echo "The directory \"$1\" already exists."
            ERRORS=1
        fi

        TEMPLATE_PATH="$PROJECT_TEMPLATES"/"$2"

        if [ ! -d "$TEMPLATE_PATH" ]; then
            echo "The project template \"$2\" doesn't exist."
            ERRORS=1
        fi

        if [ "$ERRORS" -eq 0 ]; then
            echo "Creating $1..."
            mkdir -p "$1"
            cp -r "$TEMPLATE_PATH"/* "$1"
            
            # print the readme of the template
            if [ -f "$1"/README.md ]; then
                cat "$1"/README.md
            fi

            echo "A new empty project \"$2\" has been configured."
        fi
    fi
}
